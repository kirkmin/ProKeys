continue
exit
Note.all
Note.destroy_all
Note.all
Note
Note.create({pitch: split_el[0], start: split_el[1], duration: split_el[2]})
self
Note.create({pitch: split_el[1], start: split_el[2], duration: split_el[3]})
split_el
exit
Note.create({pitch: "Gb2", start: "265", duration:"223"})
continue
next
split_el
exit
Note.create({pitch: "Gb2", start: "265", duration:"223"})
Note.new({pitch: "Gb2", start: "265", duration:"223"})
continue
exit
Note.new({pitch: "Gb2", start: "265", duration:"223"})
Notes.new({pitch: "Gb2", start: "265", duration:"223"})
exit
Notes.new({pitch: "Gb2", start: "265", duration:"223"})
split_el
continue
exit
self.id
self
continue
array
continue
recording_params
exit
recording_params
params
exit
recording_params
params
continue
finish
finihs
finish
recording_params
params[:notes]
params
exit
end
params
exit
params
exit
params
exit
params
exit
params
exit
params
@recording.notes
@recording
next
exit
params[:notes]
params
exit
params[:notes]
params
continue
current_user.keysets.first
continue
end
next
current_user.keysets.first
@keyset
n
exit
@keyset.errors.full_messages
@keyset.errors.fullmessages
@keyset
exit
asdf
flash.now[:errors] = @keyset.errors.full_messages
flash.now[:errors] = _
@keyset.errors.full_messages
exit
@keyset.errors.full_messages
@keyset
continue
exit
next
exit
eit
@user.errors.empty?
!@user.errors
@user.errors
@user
exit
jump
next
exit
q
next
@user.errors.full_messages
@user.errors
@user.errors.first
!@user.errors
@user.errors
@user
exit
1+1
1111123
exit
User.create(username: "kirkmin", password: "Kirk1990")
User.new
exit
User.new
exit
hahaha.password
hahaha = User.find_by(username: "HAHAHA")
User.create(username: "HAHAHA", password: "LOLOLOL")
lol.password
